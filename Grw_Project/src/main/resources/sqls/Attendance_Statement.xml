<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rgb.grw.dao.AttendanceDaoImpl">

	<!-- 출근 기록을 추가 -->
	<insert id="insertAttendance" parameterType="AttendanceDto">
		INSERT INTO
		ATTENDANCE (ATT_NO, EMP_NO, ATT_INTIME, ATT_OUTTIME,
		ATT_WORKTIME,
		ATT_BASETIME, ATT_STATUS, ATT_LATE)
		VALUES (#{att_no,
		jdbcType=VARCHAR}, #{emp_no, jdbcType=VARCHAR}, #{att_intime,
		jdbcType=TIMESTAMP}, #{att_outtime, jdbcType=TIMESTAMP},
		#{att_worktime, jdbcType=INTEGER}, #{att_basetime, jdbcType=INTEGER},
		#{att_status, jdbcType=VARCHAR}, #{att_late, jdbcType=VARCHAR})
	</insert>

	<!-- 출근 기록을 업데이트 -->
	<update id="updateAttendance" parameterType="AttendanceDto">
		UPDATE ATTENDANCE
		SET ATT_OUTTIME = #{att_outtime, jdbcType=TIMESTAMP},
		ATT_WORKTIME =
		#{att_worktime, jdbcType=INTEGER},
		ATT_STATUS = #{att_status,
		jdbcType=VARCHAR},
		ATT_LATE = #{att_late, jdbcType=VARCHAR}
		WHERE ATT_NO
		= #{att_no, jdbcType=VARCHAR}
	</update>

	<!-- 특정 사원의 최신 출근 기록을 조회 -->
	<select id="selectLatestAttendanceByEmpNo"
		parameterType="java.lang.String" resultType="AttendanceDto">
		SELECT * FROM ATTENDANCE
		WHERE EMP_NO = #{emp_no, jdbcType=VARCHAR}
		ORDER BY ATT_NO DESC
		FETCH
		FIRST 1 ROWS ONLY
	</select>

	<!-- 특정 날짜의 출근 기록을 조회 -->
	<select id="selectAttendanceForDay"
		parameterType="java.util.Map" resultType="AttendanceDto">
		SELECT * FROM ATTENDANCE
		WHERE EMP_NO = #{emp_no, jdbcType=VARCHAR}
		AND TRUNC(ATT_INTIME) =
		TRUNC(#{date, jdbcType=DATE})
	</select>

	<!-- 오늘의 출근 기록을 조회 -->
	<select id="selectTodayAttendanceByEmpNo"
		parameterType="java.lang.String" resultType="AttendanceDto">
		SELECT * FROM ATTENDANCE
		WHERE EMP_NO = #{emp_no, jdbcType=VARCHAR}
		AND TRUNC(ATT_INTIME) =
		TRUNC(SYSDATE)
	</select>

	<!-- 오늘의 출근 상태를 조회 -->
	<select id="selectTodayAttendanceStatusByEmpNo"
		parameterType="java.lang.String" resultType="java.util.Map">
		SELECT
		CASE
		WHEN ATT_OUTTIME
		IS NULL THEN '출근'
		WHEN ATT_OUTTIME IS NOT NULL AND ATT_INTIME &lt;
		SYSDATE - INTERVAL '1' HOUR THEN '지각'
		WHEN ATT_OUTTIME IS NOT NULL AND
		ATT_OUTTIME &gt; SYSDATE + INTERVAL '1' HOUR THEN '조퇴'
		ELSE '정상'
		END AS
		STATUS
		FROM ATTENDANCE
		WHERE EMP_NO = #{emp_no, jdbcType=VARCHAR}
		AND
		TRUNC(ATT_INTIME) = TRUNC(SYSDATE)
	</select>

	<!-- 특정 사원의 월별 출근 기록을 조회 -->
	<select id="selectMonthlyAttendanceByEmpNo"
		parameterType="java.util.Map" resultType="AttendanceDto">
		SELECT * FROM ATTENDANCE
		WHERE EMP_NO = #{emp_no, jdbcType=VARCHAR}
		AND TRUNC(ATT_INTIME, 'MM')
		= TRUNC(#{date, jdbcType=DATE}, 'MM')
	</select>

	<!-- 특정 날짜의 모든 사원들의 출근 기록을 조회 -->
	<select id="selectAllAttendanceForDay"
		parameterType="java.util.Date" resultType="AttendanceDto">
		SELECT * FROM ATTENDANCE
		WHERE TRUNC(ATT_INTIME) = TRUNC(#{date, jdbcType=DATE})
	</select>

</mapper>
